================================================================
        	TCP Server-Client Project
================================================================

Description:
------------
This project contains a simple TCP server and client written in C++.
- The server can handle multiple clients at once using pthreads.
- When a client sends a "hello" message, the server responds with "world".
- If any other message is sent, the server sends it back to the client without any modification.
- Both the server and client can maintain a TCP connection and exchange messages until a "disconnect" command is received from the client.
- When the server is empty, you can shut it down with the message "exit" at the server terminal; when someone is connected, it is not possible.
- If port 8888 is occupied after exit, you can kill it with the command: `kill -9 [id_of_process]`. You can find the `id_of_process` with the command: `lsof -i :8888`.
- Normally it will not be occupied, but it can be after a SIGINT generated by Ctrl + C.

Directory Structure:
--------------------
    TCPServerClient/
    ├── CMakeLists.txt
    ├── Readme.txt
    └── src/
        └── main.cpp

Building and Running:
---------------------
1. Navigate to the project directory:

	cd path/to/TCPServerClient

2. Create a build directory and navigate into it:
	
	mkdir build; cd build

3. Generate Makefiles using CMake:
    
	cmake path/to/TCPServerClient/

4. Compile the project:
	
	make

5. After compilation, you can choose to run TCPServerClient as server or client ( make sure to run client on another terminal ) .

	./TCPServerClient server  # to run as server
	./TCPServerClient client  # to run as client
	
Author:
-------
Filip Nocoń
